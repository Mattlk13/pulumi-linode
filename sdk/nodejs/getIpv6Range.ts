// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides information about a Linode IPv6 Range.
 *
 * ## Example Usage
 *
 * Get information about an IPv6 range assigned to a Linode:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const range_info = pulumi.output(linode.getIpv6Range({
 *     range: "2001:0db8::",
 * }));
 * ```
 * ## Attributes
 *
 * The `linode.Ipv6Range` data source exports the following attributes:
 *
 * * `ipBgp` - Whether this IPv6 range is shared.
 *
 * * `linodes` - A set of Linodes targeted by this IPv6 range. Includes Linodes with IP sharing.
 *
 * * `prefix` - The prefix length of the address, denoting how many addresses can be assigned from this range.
 *
 * * `region` - The region for this range of IPv6 addresses.
 */
export function getIpv6Range(args: GetIpv6RangeArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv6RangeResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("linode:index/getIpv6Range:getIpv6Range", {
        "range": args.range,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpv6Range.
 */
export interface GetIpv6RangeArgs {
    /**
     * The IPv6 range to retrieve information about.
     */
    range: string;
}

/**
 * A collection of values returned by getIpv6Range.
 */
export interface GetIpv6RangeResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isBgp: boolean;
    readonly linodes: number[];
    readonly prefix: number;
    readonly range: string;
    readonly region: string;
}

export function getIpv6RangeOutput(args: GetIpv6RangeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv6RangeResult> {
    return pulumi.output(args).apply(a => getIpv6Range(a, opts))
}

/**
 * A collection of arguments for invoking getIpv6Range.
 */
export interface GetIpv6RangeOutputArgs {
    /**
     * The IPv6 range to retrieve information about.
     */
    range: pulumi.Input<string>;
}
