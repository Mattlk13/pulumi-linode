// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides details about an LKE Cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-linode/sdk/v2/go/linode"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := linode.LookupLkeCluster(ctx, &linode.LookupLkeClusterArgs{
// 			Id: 123,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupLkeCluster(ctx *pulumi.Context, args *LookupLkeClusterArgs, opts ...pulumi.InvokeOption) (*LookupLkeClusterResult, error) {
	var rv LookupLkeClusterResult
	err := ctx.Invoke("linode:index/getLkeCluster:getLkeCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLkeCluster.
type LookupLkeClusterArgs struct {
	// The LKE Cluster's ID.
	Id int `pulumi:"id"`
}

// A collection of values returned by getLkeCluster.
type LookupLkeClusterResult struct {
	// The endpoints for the Kubernetes API server.
	ApiEndpoints []string `pulumi:"apiEndpoints"`
	// The ID of the node.
	Id int `pulumi:"id"`
	// The Kubernetes version for this Kubernetes cluster in the format of `major.minor` (e.g. `1.17`).
	K8sVersion string `pulumi:"k8sVersion"`
	// The base64 encoded kubeconfig for the Kubernetes cluster.
	Kubeconfig string `pulumi:"kubeconfig"`
	Label      string `pulumi:"label"`
	// Node pools associated with this cluster.
	Pools []GetLkeClusterPool `pulumi:"pools"`
	// This Kubernetes cluster's location.
	Region string `pulumi:"region"`
	// The status of the node.
	Status string `pulumi:"status"`
	// The tags applied to the cluster.
	Tags []string `pulumi:"tags"`
}
