// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package linode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **NOTICE:** Managed Databases are currently in beta. Ensure `apiVersion` is set to `v4beta` in order to use this data source.
//
// Provides information about Linode Managed Databases that match a set of filters.
//
// ## Example Usage
//
// Get information about all Linode Managed Databases:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-linode/sdk/v3/go/linode"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := linode.GetDatabases(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// Get information about all Linode MySQL Databases:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-linode/sdk/v3/go/linode"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := linode.GetDatabases(ctx, &GetDatabasesArgs{
// 			Filters: []GetDatabasesFilter{
// 				GetDatabasesFilter{
// 					Name: "engine",
// 					Values: []string{
// 						"mysql",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Attributes
//
// Each engine will be stored in the `databases` attribute and will export the following attributes:
//
// * `allowList` - A list of IP addresses that can access the Managed Database.
//
// * `clusterSize` - The number of Linode Instance nodes deployed to the Managed Database.
//
// * `created` - When this Managed Database was created.
//
// * `encrypted` - Whether the Managed Databases is encrypted.
//
// * `engine` - The Managed Database engine.
//
// * `hostPrimary` - The primary host for the Managed Database.
//
// * `hostSecondary` - The secondary/private network host for the Managed Database.
//
// * `id` - The ID of the Managed Database.
//
// * `label` - A unique, user-defined string referring to the Managed Database.
//
// * `region` - The region to use for the Managed Database.
//
// * `replicationType` - The replication method used for the Managed Database.
//
// * `sslConnection` - Whether to require SSL credentials to establish a connection to the Managed Database.
//
// * `status` - The operating status of the Managed Database.
//
// * `type` - The Linode Instance type used for the nodes of the  Managed Database instance.
//
// * `updated` - When this Managed Database was last updated.
//
// * `version` - The Managed Database engine version.
func GetDatabases(ctx *pulumi.Context, args *GetDatabasesArgs, opts ...pulumi.InvokeOption) (*GetDatabasesResult, error) {
	var rv GetDatabasesResult
	err := ctx.Invoke("linode:index/getDatabases:getDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabases.
type GetDatabasesArgs struct {
	Filters []GetDatabasesFilter `pulumi:"filters"`
	// If true, only the latest create database will be returned.
	Latest *bool `pulumi:"latest"`
	// The order in which results should be returned. (`asc`, `desc`; default `asc`)
	Order *string `pulumi:"order"`
	// The attribute to order the results by. (`version`)
	OrderBy *string `pulumi:"orderBy"`
}

// A collection of values returned by getDatabases.
type GetDatabasesResult struct {
	Databases []GetDatabasesDatabase `pulumi:"databases"`
	Filters   []GetDatabasesFilter   `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Latest  *bool   `pulumi:"latest"`
	Order   *string `pulumi:"order"`
	OrderBy *string `pulumi:"orderBy"`
}

func GetDatabasesOutput(ctx *pulumi.Context, args GetDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetDatabasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabasesResult, error) {
			args := v.(GetDatabasesArgs)
			r, err := GetDatabases(ctx, &args, opts...)
			var s GetDatabasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabasesResultOutput)
}

// A collection of arguments for invoking getDatabases.
type GetDatabasesOutputArgs struct {
	Filters GetDatabasesFilterArrayInput `pulumi:"filters"`
	// If true, only the latest create database will be returned.
	Latest pulumi.BoolPtrInput `pulumi:"latest"`
	// The order in which results should be returned. (`asc`, `desc`; default `asc`)
	Order pulumi.StringPtrInput `pulumi:"order"`
	// The attribute to order the results by. (`version`)
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
}

func (GetDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getDatabases.
type GetDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesResult)(nil)).Elem()
}

func (o GetDatabasesResultOutput) ToGetDatabasesResultOutput() GetDatabasesResultOutput {
	return o
}

func (o GetDatabasesResultOutput) ToGetDatabasesResultOutputWithContext(ctx context.Context) GetDatabasesResultOutput {
	return o
}

func (o GetDatabasesResultOutput) Databases() GetDatabasesDatabaseArrayOutput {
	return o.ApplyT(func(v GetDatabasesResult) []GetDatabasesDatabase { return v.Databases }).(GetDatabasesDatabaseArrayOutput)
}

func (o GetDatabasesResultOutput) Filters() GetDatabasesFilterArrayOutput {
	return o.ApplyT(func(v GetDatabasesResult) []GetDatabasesFilter { return v.Filters }).(GetDatabasesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabasesResultOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDatabasesResult) *bool { return v.Latest }).(pulumi.BoolPtrOutput)
}

func (o GetDatabasesResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabasesResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o GetDatabasesResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabasesResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabasesResultOutput{})
}
