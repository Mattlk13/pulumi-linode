// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Linode
{
    public static class GetVlans
    {
        /// <summary>
        /// Provides details about Linode VLANs.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Linode = Pulumi.Linode;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myInstance = new Linode.Instance("myInstance", new Linode.InstanceArgs
        ///         {
        ///             Image = "linode/ubuntu18.04",
        ///             Interfaces = 
        ///             {
        ///                 new Linode.Inputs.InstanceInterfaceArgs
        ///                 {
        ///                     Label = "my-vlan",
        ///                     Purpose = "vlan",
        ///                 },
        ///             },
        ///             Label = "my_instance",
        ///             Region = "us-southeast",
        ///             RootPass = "bogusPassword$",
        ///             Type = "g6-standard-1",
        ///         });
        ///         var my_vlans = Output.Create(Linode.GetVlans.InvokeAsync(new Linode.GetVlansArgs
        ///         {
        ///             Filters = 
        ///             {
        ///                 new Linode.Inputs.GetVlansFilterArgs
        ///                 {
        ///                     Name = "label",
        ///                     Values = 
        ///                     {
        ///                         "my-vlan",
        ///                     },
        ///                 },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes
        /// 
        /// Each Linode VLAN will be stored in the `vlans` attribute and will export the following attributes:
        /// 
        /// * `label` - The unique label of the VLAN.
        /// 
        /// * `linodes` - The running Linodes currently attached to the VLAN.
        /// 
        /// * `region` - The region the VLAN is located in. See all regions [here](https://api.linode.com/v4/regions).
        /// 
        /// * `created` - When the VLAN was created.
        /// 
        /// ## Filterable Fields
        /// 
        /// * `label`
        /// 
        /// * `region`
        /// </summary>
        public static Task<GetVlansResult> InvokeAsync(GetVlansArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVlansResult>("linode:index/getVlans:getVlans", args ?? new GetVlansArgs(), options.WithVersion());
    }


    public sealed class GetVlansArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVlansFilterArgs>? _filters;
        public List<Inputs.GetVlansFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVlansFilterArgs>());
            set => _filters = value;
        }

        public GetVlansArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVlansResult
    {
        public readonly ImmutableArray<Outputs.GetVlansFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetVlansVlanResult> Vlans;

        [OutputConstructor]
        private GetVlansResult(
            ImmutableArray<Outputs.GetVlansFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetVlansVlanResult> vlans)
        {
            Filters = filters;
            Id = id;
            Vlans = vlans;
        }
    }
}
