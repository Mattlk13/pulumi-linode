// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.linode.InstanceArgs;
import com.pulumi.linode.Utilities;
import com.pulumi.linode.inputs.InstanceState;
import com.pulumi.linode.outputs.InstanceAlerts;
import com.pulumi.linode.outputs.InstanceBackups;
import com.pulumi.linode.outputs.InstanceConfig;
import com.pulumi.linode.outputs.InstanceDisk;
import com.pulumi.linode.outputs.InstanceInterface;
import com.pulumi.linode.outputs.InstanceSpecs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Linode Instance resource.  This can be used to create, modify, and delete Linodes.
 * For more information, see [Getting Started with Linode](https://linode.com/docs/getting-started/) and the [Linode APIv4 docs](https://developers.linode.com/api/v4#operation/createLinodeInstance).
 * 
 * ## Example Usage
 * ### Simple Linode Instance
 * 
 * The following example shows how one might use this resource to configure a Linode instance.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.linode.Instance;
 * import com.pulumi.linode.InstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var web = new Instance(&#34;web&#34;, InstanceArgs.builder()        
 *             .authorizedKeys(&#34;ssh-rsa AAAA...Gw== user@example.local&#34;)
 *             .group(&#34;foo&#34;)
 *             .image(&#34;linode/ubuntu18.04&#34;)
 *             .label(&#34;simple_instance&#34;)
 *             .privateIp(true)
 *             .region(&#34;us-central&#34;)
 *             .rootPass(&#34;terr4form-test&#34;)
 *             .swapSize(256)
 *             .tags(&#34;foo&#34;)
 *             .type(&#34;g6-standard-1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ## Attributes
 * 
 * This Linode Instance resource exports the following attributes:
 * 
 * * `status` - The status of the instance, indicating the current readiness state. (`running`, `offline`, ...)
 * 
 * * `ip_address` - A string containing the Linode&#39;s public IP address.
 * 
 * * `private_ip_address` - This Linode&#39;s Private IPv4 Address, if enabled.  The regional private IP address range, 192.168.128.0/17, is shared by all Linode Instances in a region.
 * 
 * * `ipv6` - This Linode&#39;s IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.  The prefix (`/64`) is included in this attribute.
 * 
 * * `ipv4` - This Linode&#39;s IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
 * 
 * * `specs.0.disk` -  The amount of storage space, in GB. this Linode has access to. A typical Linode will divide this space between a primary disk with an image deployed to it, and a swap disk, usually 512 MB. This is the default configuration created when deploying a Linode with an image through POST /linode/instances.
 * 
 * * `specs.0.memory` - The amount of RAM, in MB, this Linode has access to. Typically a Linode will choose to boot with all of its available RAM, but this can be configured in a Config profile.
 * 
 * * `specs.0.vcpus` - The number of vcpus this Linode has access to. Typically a Linode will choose to boot with all of its available vcpus, but this can be configured in a Config Profile.
 * 
 * * `specs.0.transfer` - The amount of network transfer this Linode is allotted each month.
 * 
 * * `backups` - Information about this Linode&#39;s backups status.
 *   
 *   * `enabled` - If this Linode has the Backup service enabled.
 *   
 *   * `schedule`
 *     
 *     * `day` -  The day of the week that your Linode&#39;s weekly Backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as &#34;Scheduling&#34; until the day is automatically selected.
 *     
 *     * `window` - The window (&#39;W0&#39;-&#39;W22&#39;) in which your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur. For example, &#39;W10&#39; indicates that your backups should be taken between 10:00 and 12:00. If you do not choose a backup window, one will be selected for you automatically.  If not set manually, when backups are initially enabled this may come back as Scheduling until the window is automatically selected.
 * 
 * ## Import
 * 
 * Linodes Instances can be imported using the Linode `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import linode:index/instance:Instance mylinode 1234567
 * ```
 * 
 *  When importing an instance, all `disk` and `config` values must be represented. Imported disks must include their `label` value.
 * 
 * **Any disk that is not precisely represented may be removed resulting in data loss.** Imported configs should include all `devices`, and must include `label`, `kernel`, and the `root_device`.
 * 
 * The instance must include a `boot_config_label` referring to the correct configuration profile. The Linode Guide, [Import Existing Infrastructure to Terraform](https://www.linode.com/docs/applications/configuration-management/import-existing-infrastructure-to-terraform/), offers resource importing examples for Instances and other Linode resource types.
 * 
 */
@ResourceType(type="linode:index/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * Configuration options for alert triggers on this Linode.
     * 
     */
    @Export(name="alerts", type=InstanceAlerts.class, parameters={})
    private Output<InstanceAlerts> alerts;

    /**
     * @return Configuration options for alert triggers on this Linode.
     * 
     */
    public Output<InstanceAlerts> alerts() {
        return this.alerts;
    }
    /**
     * A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorized_keys` forces the creation of a new Linode Instance.*
     * 
     */
    @Export(name="authorizedKeys", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> authorizedKeys;

    /**
     * @return A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if `image` is provided. *This value can not be imported.* *Changing `authorized_keys` forces the creation of a new Linode Instance.*
     * 
     */
    public Output<Optional<List<String>>> authorizedKeys() {
        return Codegen.optional(this.authorizedKeys);
    }
    /**
     * A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user&#39;s `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorized_users` forces the creation of a new Linode Instance.*
     * 
     */
    @Export(name="authorizedUsers", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> authorizedUsers;

    /**
     * @return A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user&#39;s `~/.ssh/authorized_keys` file automatically. *This value can not be imported.* *Changing `authorized_users` forces the creation of a new Linode Instance.*
     * 
     */
    public Output<Optional<List<String>>> authorizedUsers() {
        return Codegen.optional(this.authorizedUsers);
    }
    /**
     * A Backup ID from another Linode&#39;s available backups. Your User must have read_write access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode&#39;s available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backup_id` forces the creation of a new Linode Instance.*
     * 
     */
    @Export(name="backupId", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> backupId;

    /**
     * @return A Backup ID from another Linode&#39;s available backups. Your User must have read_write access to that Linode, the Backup must have a status of successful, and the Linode must be deployed to the same region as the Backup. See /linode/instances/{linodeId}/backups for a Linode&#39;s available backups. This field and the image field are mutually exclusive. *This value can not be imported.* *Changing `backup_id` forces the creation of a new Linode Instance.*
     * 
     */
    public Output<Optional<Integer>> backupId() {
        return Codegen.optional(this.backupId);
    }
    /**
     * Information about this Linode&#39;s backups status.
     * 
     */
    @Export(name="backups", type=InstanceBackups.class, parameters={})
    private Output<InstanceBackups> backups;

    /**
     * @return Information about this Linode&#39;s backups status.
     * 
     */
    public Output<InstanceBackups> backups() {
        return this.backups;
    }
    /**
     * If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
     * 
     */
    @Export(name="backupsEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> backupsEnabled;

    /**
     * @return If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
     * 
     */
    public Output<Boolean> backupsEnabled() {
        return this.backupsEnabled;
    }
    /**
     * The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `boot_config_label`. *This value can not be imported.*
     * 
     */
    @Export(name="bootConfigLabel", type=String.class, parameters={})
    private Output<String> bootConfigLabel;

    /**
     * @return The Label of the Instance Config that should be used to boot the Linode instance.  If there is only one `config`, the `label` of that `config` will be used as the `boot_config_label`. *This value can not be imported.*
     * 
     */
    public Output<String> bootConfigLabel() {
        return this.bootConfigLabel;
    }
    /**
     * If true, then the instance is kept or converted into in a running state. If false, the instance will be shutdown. If unspecified, the Linode&#39;s power status will not be managed by the Provider.
     * 
     */
    @Export(name="booted", type=Boolean.class, parameters={})
    private Output<Boolean> booted;

    /**
     * @return If true, then the instance is kept or converted into in a running state. If false, the instance will be shutdown. If unspecified, the Linode&#39;s power status will not be managed by the Provider.
     * 
     */
    public Output<Boolean> booted() {
        return this.booted;
    }
    /**
     * Configuration profiles define the VM settings and boot behavior of the Linode Instance.
     * 
     */
    @Export(name="configs", type=List.class, parameters={InstanceConfig.class})
    private Output</* @Nullable */ List<InstanceConfig>> configs;

    /**
     * @return Configuration profiles define the VM settings and boot behavior of the Linode Instance.
     * 
     */
    public Output<Optional<List<InstanceConfig>>> configs() {
        return Codegen.optional(this.configs);
    }
    @Export(name="disks", type=List.class, parameters={InstanceDisk.class})
    private Output</* @Nullable */ List<InstanceDisk>> disks;

    public Output<Optional<List<InstanceDisk>>> disks() {
        return Codegen.optional(this.disks);
    }
    /**
     * The display group of the Linode instance.
     * 
     */
    @Export(name="group", type=String.class, parameters={})
    private Output</* @Nullable */ String> group;

    /**
     * @return The display group of the Linode instance.
     * 
     */
    public Output<Optional<String>> group() {
        return Codegen.optional(this.group);
    }
    /**
     * An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/images). *Changing `image` forces the creation of a new Linode Instance.*
     * 
     */
    @Export(name="image", type=String.class, parameters={})
    private Output</* @Nullable */ String> image;

    /**
     * @return An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/. See /images for more information on the Images available for you to use. Examples are `linode/debian9`, `linode/fedora28`, `linode/ubuntu16.04lts`, `linode/arch`, and `private/12345`. See all images [here](https://api.linode.com/v4/images). *Changing `image` forces the creation of a new Linode Instance.*
     * 
     */
    public Output<Optional<String>> image() {
        return Codegen.optional(this.image);
    }
    /**
     * An array of Network Interfaces for this Linode to be created with. If an explicit config or disk is defined, interfaces
     * must be declared in the config block.
     * 
     */
    @Export(name="interfaces", type=List.class, parameters={InstanceInterface.class})
    private Output</* @Nullable */ List<InstanceInterface>> interfaces;

    /**
     * @return An array of Network Interfaces for this Linode to be created with. If an explicit config or disk is defined, interfaces
     * must be declared in the config block.
     * 
     */
    public Output<Optional<List<InstanceInterface>>> interfaces() {
        return Codegen.optional(this.interfaces);
    }
    /**
     * This Linode&#39;s Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address
     * will be used for this field.
     * 
     */
    @Export(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    /**
     * @return This Linode&#39;s Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address
     * will be used for this field.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * This Linode&#39;s IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single
     * private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
     * 
     */
    @Export(name="ipv4s", type=List.class, parameters={String.class})
    private Output<List<String>> ipv4s;

    /**
     * @return This Linode&#39;s IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single
     * private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
     * 
     */
    public Output<List<String>> ipv4s() {
        return this.ipv4s;
    }
    /**
     * This Linode&#39;s IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.
     * 
     */
    @Export(name="ipv6", type=String.class, parameters={})
    private Output<String> ipv6;

    /**
     * @return This Linode&#39;s IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.
     * 
     */
    public Output<String> ipv6() {
        return this.ipv6;
    }
    /**
     * The name of this interface. If the interface is a VLAN, a label is required.
     * 
     */
    @Export(name="label", type=String.class, parameters={})
    private Output<String> label;

    /**
     * @return The name of this interface. If the interface is a VLAN, a label is required.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode&#39;s region. It can be enabled on an existing Linode but it can&#39;t be disabled.
     * 
     */
    @Export(name="privateIp", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> privateIp;

    /**
     * @return If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within the Linode&#39;s region. It can be enabled on an existing Linode but it can&#39;t be disabled.
     * 
     */
    public Output<Optional<Boolean>> privateIp() {
        return Codegen.optional(this.privateIp);
    }
    /**
     * This Linode&#39;s Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode
     * Instances in a region.
     * 
     */
    @Export(name="privateIpAddress", type=String.class, parameters={})
    private Output<String> privateIpAddress;

    /**
     * @return This Linode&#39;s Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode
     * Instances in a region.
     * 
     */
    public Output<String> privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * This is the location where the Linode is deployed. Examples are `&#34;us-east&#34;`, `&#34;us-west&#34;`, `&#34;ap-south&#34;`, etc. See all regions [here](https://api.linode.com/v4/regions). *Changing `region` forces the creation of a new Linode Instance.*.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return This is the location where the Linode is deployed. Examples are `&#34;us-east&#34;`, `&#34;us-west&#34;`, `&#34;ap-south&#34;`, etc. See all regions [here](https://api.linode.com/v4/regions). *Changing `region` forces the creation of a new Linode Instance.*.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * If true, changes in Linode type will attempt to upsize or downsize implicitly created disks. This must be false if explicit disks are defined. *This is an irreversible action as Linode disks cannot be automatically downsized.*
     * 
     */
    @Export(name="resizeDisk", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> resizeDisk;

    /**
     * @return If true, changes in Linode type will attempt to upsize or downsize implicitly created disks. This must be false if explicit disks are defined. *This is an irreversible action as Linode disks cannot be automatically downsized.*
     * 
     */
    public Output<Optional<Boolean>> resizeDisk() {
        return Codegen.optional(this.resizeDisk);
    }
    /**
     * The initial password for the `root` user account. *This value can not be imported.* *Changing `root_pass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in state.*
     * 
     */
    @Export(name="rootPass", type=String.class, parameters={})
    private Output</* @Nullable */ String> rootPass;

    /**
     * @return The initial password for the `root` user account. *This value can not be imported.* *Changing `root_pass` forces the creation of a new Linode Instance.* *If omitted, a random password will be generated but will not be stored in state.*
     * 
     */
    public Output<Optional<String>> rootPass() {
        return Codegen.optional(this.rootPass);
    }
    /**
     * A set of IPv4 addresses to be shared with the Instance. These IP addresses can be both private and public, but must be in the same region as the instance.
     * 
     */
    @Export(name="sharedIpv4s", type=List.class, parameters={String.class})
    private Output<List<String>> sharedIpv4s;

    /**
     * @return A set of IPv4 addresses to be shared with the Instance. These IP addresses can be both private and public, but must be in the same region as the instance.
     * 
     */
    public Output<List<String>> sharedIpv4s() {
        return this.sharedIpv4s;
    }
    /**
     * Information about the resources available to this Linode.
     * 
     */
    @Export(name="specs", type=InstanceSpecs.class, parameters={})
    private Output<InstanceSpecs> specs;

    /**
     * @return Information about the resources available to this Linode.
     * 
     */
    public Output<InstanceSpecs> specs() {
        return this.specs;
    }
    /**
     * An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if &#39;stackscript_id&#39; is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscript_data` forces the creation of a new Linode Instance.*
     * 
     */
    @Export(name="stackscriptData", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> stackscriptData;

    /**
     * @return An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if &#39;stackscript_id&#39; is given. The required values depend on the StackScript being deployed.  *This value can not be imported.* *Changing `stackscript_data` forces the creation of a new Linode Instance.*
     * 
     */
    public Output<Optional<Map<String,Object>>> stackscriptData() {
        return Codegen.optional(this.stackscriptData);
    }
    /**
     * The StackScript to deploy to the newly created Linode. If provided, &#39;image&#39; must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscript_id` forces the creation of a new Linode Instance.*
     * 
     */
    @Export(name="stackscriptId", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> stackscriptId;

    /**
     * @return The StackScript to deploy to the newly created Linode. If provided, &#39;image&#39; must also be provided, and must be an Image that is compatible with this StackScript. *This value can not be imported.* *Changing `stackscript_id` forces the creation of a new Linode Instance.*
     * 
     */
    public Output<Optional<Integer>> stackscriptId() {
        return Codegen.optional(this.stackscriptId);
    }
    /**
     * The status of the instance, indicating the current readiness state.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of the instance, indicating the current readiness state.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
     * 
     */
    @Export(name="swapSize", type=Integer.class, parameters={})
    private Output<Integer> swapSize;

    /**
     * @return When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.
     * 
     */
    public Output<Integer> swapSize() {
        return this.swapSize;
    }
    /**
     * A list of tags applied to this object. Tags are for organizational purposes only.
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return A list of tags applied to this object. Tags are for organizational purposes only.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are `&#34;g6-nanode-1&#34;`, `&#34;g6-standard-2&#34;`, `&#34;g6-highmem-16&#34;`, `&#34;g6-dedicated-16&#34;`, etc. See all types [here](https://api.linode.com/v4/linode/types).
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output</* @Nullable */ String> type;

    /**
     * @return The Linode type defines the pricing, CPU, disk, and RAM specs of the instance. Examples are `&#34;g6-nanode-1&#34;`, `&#34;g6-standard-2&#34;`, `&#34;g6-highmem-16&#34;`, `&#34;g6-dedicated-16&#34;`, etc. See all types [here](https://api.linode.com/v4/linode/types).
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    /**
     * The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
     * 
     */
    @Export(name="watchdogEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> watchdogEnabled;

    /**
     * @return The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
     * 
     */
    public Output<Optional<Boolean>> watchdogEnabled() {
        return Codegen.optional(this.watchdogEnabled);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("linode:index/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
