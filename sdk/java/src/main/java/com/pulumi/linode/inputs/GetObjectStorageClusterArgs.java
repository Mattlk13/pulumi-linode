// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetObjectStorageClusterArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetObjectStorageClusterArgs Empty = new GetObjectStorageClusterArgs();

    @Import(name="domain")
    private @Nullable Output<String> domain;

    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The unique ID of this cluster.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique ID of this cluster.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="staticSiteDomain")
    private @Nullable Output<String> staticSiteDomain;

    public Optional<Output<String>> staticSiteDomain() {
        return Optional.ofNullable(this.staticSiteDomain);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetObjectStorageClusterArgs() {}

    private GetObjectStorageClusterArgs(GetObjectStorageClusterArgs $) {
        this.domain = $.domain;
        this.id = $.id;
        this.region = $.region;
        this.staticSiteDomain = $.staticSiteDomain;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetObjectStorageClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetObjectStorageClusterArgs $;

        public Builder() {
            $ = new GetObjectStorageClusterArgs();
        }

        public Builder(GetObjectStorageClusterArgs defaults) {
            $ = new GetObjectStorageClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param id The unique ID of this cluster.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique ID of this cluster.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder staticSiteDomain(@Nullable Output<String> staticSiteDomain) {
            $.staticSiteDomain = staticSiteDomain;
            return this;
        }

        public Builder staticSiteDomain(String staticSiteDomain) {
            return staticSiteDomain(Output.of(staticSiteDomain));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetObjectStorageClusterArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
