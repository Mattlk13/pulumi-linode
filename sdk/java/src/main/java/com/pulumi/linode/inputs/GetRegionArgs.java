// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRegionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRegionArgs Empty = new GetRegionArgs();

    /**
     * The country the region resides in.
     * 
     */
    @Import(name="country")
    private @Nullable Output<String> country;

    /**
     * @return The country the region resides in.
     * 
     */
    public Optional<Output<String>> country() {
        return Optional.ofNullable(this.country);
    }

    /**
     * The code name of the region to select.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The code name of the region to select.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    private GetRegionArgs() {}

    private GetRegionArgs(GetRegionArgs $) {
        this.country = $.country;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRegionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRegionArgs $;

        public Builder() {
            $ = new GetRegionArgs();
        }

        public Builder(GetRegionArgs defaults) {
            $ = new GetRegionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param country The country the region resides in.
         * 
         * @return builder
         * 
         */
        public Builder country(@Nullable Output<String> country) {
            $.country = country;
            return this;
        }

        /**
         * @param country The country the region resides in.
         * 
         * @return builder
         * 
         */
        public Builder country(String country) {
            return country(Output.of(country));
        }

        /**
         * @param id The code name of the region to select.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The code name of the region to select.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public GetRegionArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
