// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.linode.outputs.GetInstancesInstanceConfigDevice;
import com.pulumi.linode.outputs.GetInstancesInstanceConfigHelper;
import com.pulumi.linode.outputs.GetInstancesInstanceConfigInterface;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstancesInstanceConfig {
    private final String comments;
    private final List<GetInstancesInstanceConfigDevice> devices;
    private final List<GetInstancesInstanceConfigHelper> helpers;
    private final List<GetInstancesInstanceConfigInterface> interfaces;
    private final String kernel;
    private final String label;
    private final Integer memoryLimit;
    private final String rootDevice;
    private final String runLevel;
    private final String virtMode;

    @CustomType.Constructor
    private GetInstancesInstanceConfig(
        @CustomType.Parameter("comments") String comments,
        @CustomType.Parameter("devices") List<GetInstancesInstanceConfigDevice> devices,
        @CustomType.Parameter("helpers") List<GetInstancesInstanceConfigHelper> helpers,
        @CustomType.Parameter("interfaces") List<GetInstancesInstanceConfigInterface> interfaces,
        @CustomType.Parameter("kernel") String kernel,
        @CustomType.Parameter("label") String label,
        @CustomType.Parameter("memoryLimit") Integer memoryLimit,
        @CustomType.Parameter("rootDevice") String rootDevice,
        @CustomType.Parameter("runLevel") String runLevel,
        @CustomType.Parameter("virtMode") String virtMode) {
        this.comments = comments;
        this.devices = devices;
        this.helpers = helpers;
        this.interfaces = interfaces;
        this.kernel = kernel;
        this.label = label;
        this.memoryLimit = memoryLimit;
        this.rootDevice = rootDevice;
        this.runLevel = runLevel;
        this.virtMode = virtMode;
    }

    public String comments() {
        return this.comments;
    }
    public List<GetInstancesInstanceConfigDevice> devices() {
        return this.devices;
    }
    public List<GetInstancesInstanceConfigHelper> helpers() {
        return this.helpers;
    }
    public List<GetInstancesInstanceConfigInterface> interfaces() {
        return this.interfaces;
    }
    public String kernel() {
        return this.kernel;
    }
    public String label() {
        return this.label;
    }
    public Integer memoryLimit() {
        return this.memoryLimit;
    }
    public String rootDevice() {
        return this.rootDevice;
    }
    public String runLevel() {
        return this.runLevel;
    }
    public String virtMode() {
        return this.virtMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstanceConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String comments;
        private List<GetInstancesInstanceConfigDevice> devices;
        private List<GetInstancesInstanceConfigHelper> helpers;
        private List<GetInstancesInstanceConfigInterface> interfaces;
        private String kernel;
        private String label;
        private Integer memoryLimit;
        private String rootDevice;
        private String runLevel;
        private String virtMode;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstanceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comments = defaults.comments;
    	      this.devices = defaults.devices;
    	      this.helpers = defaults.helpers;
    	      this.interfaces = defaults.interfaces;
    	      this.kernel = defaults.kernel;
    	      this.label = defaults.label;
    	      this.memoryLimit = defaults.memoryLimit;
    	      this.rootDevice = defaults.rootDevice;
    	      this.runLevel = defaults.runLevel;
    	      this.virtMode = defaults.virtMode;
        }

        public Builder comments(String comments) {
            this.comments = Objects.requireNonNull(comments);
            return this;
        }
        public Builder devices(List<GetInstancesInstanceConfigDevice> devices) {
            this.devices = Objects.requireNonNull(devices);
            return this;
        }
        public Builder devices(GetInstancesInstanceConfigDevice... devices) {
            return devices(List.of(devices));
        }
        public Builder helpers(List<GetInstancesInstanceConfigHelper> helpers) {
            this.helpers = Objects.requireNonNull(helpers);
            return this;
        }
        public Builder helpers(GetInstancesInstanceConfigHelper... helpers) {
            return helpers(List.of(helpers));
        }
        public Builder interfaces(List<GetInstancesInstanceConfigInterface> interfaces) {
            this.interfaces = Objects.requireNonNull(interfaces);
            return this;
        }
        public Builder interfaces(GetInstancesInstanceConfigInterface... interfaces) {
            return interfaces(List.of(interfaces));
        }
        public Builder kernel(String kernel) {
            this.kernel = Objects.requireNonNull(kernel);
            return this;
        }
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        public Builder memoryLimit(Integer memoryLimit) {
            this.memoryLimit = Objects.requireNonNull(memoryLimit);
            return this;
        }
        public Builder rootDevice(String rootDevice) {
            this.rootDevice = Objects.requireNonNull(rootDevice);
            return this;
        }
        public Builder runLevel(String runLevel) {
            this.runLevel = Objects.requireNonNull(runLevel);
            return this;
        }
        public Builder virtMode(String virtMode) {
            this.virtMode = Objects.requireNonNull(virtMode);
            return this;
        }        public GetInstancesInstanceConfig build() {
            return new GetInstancesInstanceConfig(comments, devices, helpers, interfaces, kernel, label, memoryLimit, rootDevice, runLevel, virtMode);
        }
    }
}
