// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetInstancesInstanceSpec {
    private final Integer disk;
    private final Integer memory;
    private final Integer transfer;
    private final Integer vcpus;

    @CustomType.Constructor
    private GetInstancesInstanceSpec(
        @CustomType.Parameter("disk") Integer disk,
        @CustomType.Parameter("memory") Integer memory,
        @CustomType.Parameter("transfer") Integer transfer,
        @CustomType.Parameter("vcpus") Integer vcpus) {
        this.disk = disk;
        this.memory = memory;
        this.transfer = transfer;
        this.vcpus = vcpus;
    }

    public Integer disk() {
        return this.disk;
    }
    public Integer memory() {
        return this.memory;
    }
    public Integer transfer() {
        return this.transfer;
    }
    public Integer vcpus() {
        return this.vcpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstanceSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer disk;
        private Integer memory;
        private Integer transfer;
        private Integer vcpus;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstanceSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disk = defaults.disk;
    	      this.memory = defaults.memory;
    	      this.transfer = defaults.transfer;
    	      this.vcpus = defaults.vcpus;
        }

        public Builder disk(Integer disk) {
            this.disk = Objects.requireNonNull(disk);
            return this;
        }
        public Builder memory(Integer memory) {
            this.memory = Objects.requireNonNull(memory);
            return this;
        }
        public Builder transfer(Integer transfer) {
            this.transfer = Objects.requireNonNull(transfer);
            return this;
        }
        public Builder vcpus(Integer vcpus) {
            this.vcpus = Objects.requireNonNull(vcpus);
            return this;
        }        public GetInstancesInstanceSpec build() {
            return new GetInstancesInstanceSpec(disk, memory, transfer, vcpus);
        }
    }
}
