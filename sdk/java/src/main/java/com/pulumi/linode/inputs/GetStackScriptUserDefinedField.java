// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetStackScriptUserDefinedField extends com.pulumi.resources.InvokeArgs {

    public static final GetStackScriptUserDefinedField Empty = new GetStackScriptUserDefinedField();

    /**
     * The default value. If not specified, this value will be used.
     * 
     */
    @Import(name="default", required=true)
    private String default_;

    /**
     * @return The default value. If not specified, this value will be used.
     * 
     */
    public String default_() {
        return this.default_;
    }

    /**
     * An example value for the field.
     * 
     */
    @Import(name="example", required=true)
    private String example;

    /**
     * @return An example value for the field.
     * 
     */
    public String example() {
        return this.example;
    }

    /**
     * A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
     * 
     */
    @Import(name="label", required=true)
    private String label;

    /**
     * @return A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
     * 
     */
    public String label() {
        return this.label;
    }

    /**
     * A list of acceptable values for the field in any quantity, combination or order.
     * 
     */
    @Import(name="manyOf", required=true)
    private String manyOf;

    /**
     * @return A list of acceptable values for the field in any quantity, combination or order.
     * 
     */
    public String manyOf() {
        return this.manyOf;
    }

    /**
     * The name of the field.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the field.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * A list of acceptable single values for the field.
     * 
     */
    @Import(name="oneOf", required=true)
    private String oneOf;

    /**
     * @return A list of acceptable single values for the field.
     * 
     */
    public String oneOf() {
        return this.oneOf;
    }

    private GetStackScriptUserDefinedField() {}

    private GetStackScriptUserDefinedField(GetStackScriptUserDefinedField $) {
        this.default_ = $.default_;
        this.example = $.example;
        this.label = $.label;
        this.manyOf = $.manyOf;
        this.name = $.name;
        this.oneOf = $.oneOf;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStackScriptUserDefinedField defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStackScriptUserDefinedField $;

        public Builder() {
            $ = new GetStackScriptUserDefinedField();
        }

        public Builder(GetStackScriptUserDefinedField defaults) {
            $ = new GetStackScriptUserDefinedField(Objects.requireNonNull(defaults));
        }

        /**
         * @param default_ The default value. If not specified, this value will be used.
         * 
         * @return builder
         * 
         */
        public Builder default_(String default_) {
            $.default_ = default_;
            return this;
        }

        /**
         * @param example An example value for the field.
         * 
         * @return builder
         * 
         */
        public Builder example(String example) {
            $.example = example;
            return this;
        }

        /**
         * @param label A human-readable label for the field that will serve as the input prompt for entering the value during deployment.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            $.label = label;
            return this;
        }

        /**
         * @param manyOf A list of acceptable values for the field in any quantity, combination or order.
         * 
         * @return builder
         * 
         */
        public Builder manyOf(String manyOf) {
            $.manyOf = manyOf;
            return this;
        }

        /**
         * @param name The name of the field.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param oneOf A list of acceptable single values for the field.
         * 
         * @return builder
         * 
         */
        public Builder oneOf(String oneOf) {
            $.oneOf = oneOf;
            return this;
        }

        public GetStackScriptUserDefinedField build() {
            $.default_ = Objects.requireNonNull($.default_, "expected parameter 'default' to be non-null");
            $.example = Objects.requireNonNull($.example, "expected parameter 'example' to be non-null");
            $.label = Objects.requireNonNull($.label, "expected parameter 'label' to be non-null");
            $.manyOf = Objects.requireNonNull($.manyOf, "expected parameter 'manyOf' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.oneOf = Objects.requireNonNull($.oneOf, "expected parameter 'oneOf' to be non-null");
            return $;
        }
    }

}
