// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.linode.outputs.GetInstancesInstanceAlerts;
import com.pulumi.linode.outputs.GetInstancesInstanceBackup;
import com.pulumi.linode.outputs.GetInstancesInstanceConfig;
import com.pulumi.linode.outputs.GetInstancesInstanceDisk;
import com.pulumi.linode.outputs.GetInstancesInstanceSpec;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstancesInstance {
    private final GetInstancesInstanceAlerts alerts;
    private final List<GetInstancesInstanceBackup> backups;
    private final String bootConfigLabel;
    private final List<GetInstancesInstanceConfig> configs;
    private final List<GetInstancesInstanceDisk> disks;
    private final String group;
    private final Integer id;
    private final String image;
    private final String ipAddress;
    private final List<String> ipv4s;
    private final String ipv6;
    private final String label;
    private final String privateIpAddress;
    private final String region;
    private final List<GetInstancesInstanceSpec> specs;
    private final String status;
    private final Integer swapSize;
    private final List<String> tags;
    private final String type;
    private final Boolean watchdogEnabled;

    @CustomType.Constructor
    private GetInstancesInstance(
        @CustomType.Parameter("alerts") GetInstancesInstanceAlerts alerts,
        @CustomType.Parameter("backups") List<GetInstancesInstanceBackup> backups,
        @CustomType.Parameter("bootConfigLabel") String bootConfigLabel,
        @CustomType.Parameter("configs") List<GetInstancesInstanceConfig> configs,
        @CustomType.Parameter("disks") List<GetInstancesInstanceDisk> disks,
        @CustomType.Parameter("group") String group,
        @CustomType.Parameter("id") Integer id,
        @CustomType.Parameter("image") String image,
        @CustomType.Parameter("ipAddress") String ipAddress,
        @CustomType.Parameter("ipv4s") List<String> ipv4s,
        @CustomType.Parameter("ipv6") String ipv6,
        @CustomType.Parameter("label") String label,
        @CustomType.Parameter("privateIpAddress") String privateIpAddress,
        @CustomType.Parameter("region") String region,
        @CustomType.Parameter("specs") List<GetInstancesInstanceSpec> specs,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("swapSize") Integer swapSize,
        @CustomType.Parameter("tags") List<String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("watchdogEnabled") Boolean watchdogEnabled) {
        this.alerts = alerts;
        this.backups = backups;
        this.bootConfigLabel = bootConfigLabel;
        this.configs = configs;
        this.disks = disks;
        this.group = group;
        this.id = id;
        this.image = image;
        this.ipAddress = ipAddress;
        this.ipv4s = ipv4s;
        this.ipv6 = ipv6;
        this.label = label;
        this.privateIpAddress = privateIpAddress;
        this.region = region;
        this.specs = specs;
        this.status = status;
        this.swapSize = swapSize;
        this.tags = tags;
        this.type = type;
        this.watchdogEnabled = watchdogEnabled;
    }

    public GetInstancesInstanceAlerts alerts() {
        return this.alerts;
    }
    public List<GetInstancesInstanceBackup> backups() {
        return this.backups;
    }
    public String bootConfigLabel() {
        return this.bootConfigLabel;
    }
    public List<GetInstancesInstanceConfig> configs() {
        return this.configs;
    }
    public List<GetInstancesInstanceDisk> disks() {
        return this.disks;
    }
    public String group() {
        return this.group;
    }
    public Integer id() {
        return this.id;
    }
    public String image() {
        return this.image;
    }
    public String ipAddress() {
        return this.ipAddress;
    }
    public List<String> ipv4s() {
        return this.ipv4s;
    }
    public String ipv6() {
        return this.ipv6;
    }
    public String label() {
        return this.label;
    }
    public String privateIpAddress() {
        return this.privateIpAddress;
    }
    public String region() {
        return this.region;
    }
    public List<GetInstancesInstanceSpec> specs() {
        return this.specs;
    }
    public String status() {
        return this.status;
    }
    public Integer swapSize() {
        return this.swapSize;
    }
    public List<String> tags() {
        return this.tags;
    }
    public String type() {
        return this.type;
    }
    public Boolean watchdogEnabled() {
        return this.watchdogEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstancesInstanceAlerts alerts;
        private List<GetInstancesInstanceBackup> backups;
        private String bootConfigLabel;
        private List<GetInstancesInstanceConfig> configs;
        private List<GetInstancesInstanceDisk> disks;
        private String group;
        private Integer id;
        private String image;
        private String ipAddress;
        private List<String> ipv4s;
        private String ipv6;
        private String label;
        private String privateIpAddress;
        private String region;
        private List<GetInstancesInstanceSpec> specs;
        private String status;
        private Integer swapSize;
        private List<String> tags;
        private String type;
        private Boolean watchdogEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alerts = defaults.alerts;
    	      this.backups = defaults.backups;
    	      this.bootConfigLabel = defaults.bootConfigLabel;
    	      this.configs = defaults.configs;
    	      this.disks = defaults.disks;
    	      this.group = defaults.group;
    	      this.id = defaults.id;
    	      this.image = defaults.image;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipv4s = defaults.ipv4s;
    	      this.ipv6 = defaults.ipv6;
    	      this.label = defaults.label;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.region = defaults.region;
    	      this.specs = defaults.specs;
    	      this.status = defaults.status;
    	      this.swapSize = defaults.swapSize;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.watchdogEnabled = defaults.watchdogEnabled;
        }

        public Builder alerts(GetInstancesInstanceAlerts alerts) {
            this.alerts = Objects.requireNonNull(alerts);
            return this;
        }
        public Builder backups(List<GetInstancesInstanceBackup> backups) {
            this.backups = Objects.requireNonNull(backups);
            return this;
        }
        public Builder backups(GetInstancesInstanceBackup... backups) {
            return backups(List.of(backups));
        }
        public Builder bootConfigLabel(String bootConfigLabel) {
            this.bootConfigLabel = Objects.requireNonNull(bootConfigLabel);
            return this;
        }
        public Builder configs(List<GetInstancesInstanceConfig> configs) {
            this.configs = Objects.requireNonNull(configs);
            return this;
        }
        public Builder configs(GetInstancesInstanceConfig... configs) {
            return configs(List.of(configs));
        }
        public Builder disks(List<GetInstancesInstanceDisk> disks) {
            this.disks = Objects.requireNonNull(disks);
            return this;
        }
        public Builder disks(GetInstancesInstanceDisk... disks) {
            return disks(List.of(disks));
        }
        public Builder group(String group) {
            this.group = Objects.requireNonNull(group);
            return this;
        }
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder image(String image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        public Builder ipv4s(List<String> ipv4s) {
            this.ipv4s = Objects.requireNonNull(ipv4s);
            return this;
        }
        public Builder ipv4s(String... ipv4s) {
            return ipv4s(List.of(ipv4s));
        }
        public Builder ipv6(String ipv6) {
            this.ipv6 = Objects.requireNonNull(ipv6);
            return this;
        }
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        public Builder privateIpAddress(String privateIpAddress) {
            this.privateIpAddress = Objects.requireNonNull(privateIpAddress);
            return this;
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder specs(List<GetInstancesInstanceSpec> specs) {
            this.specs = Objects.requireNonNull(specs);
            return this;
        }
        public Builder specs(GetInstancesInstanceSpec... specs) {
            return specs(List.of(specs));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder swapSize(Integer swapSize) {
            this.swapSize = Objects.requireNonNull(swapSize);
            return this;
        }
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder watchdogEnabled(Boolean watchdogEnabled) {
            this.watchdogEnabled = Objects.requireNonNull(watchdogEnabled);
            return this;
        }        public GetInstancesInstance build() {
            return new GetInstancesInstance(alerts, backups, bootConfigLabel, configs, disks, group, id, image, ipAddress, ipv4s, ipv6, label, privateIpAddress, region, specs, status, swapSize, tags, type, watchdogEnabled);
        }
    }
}
