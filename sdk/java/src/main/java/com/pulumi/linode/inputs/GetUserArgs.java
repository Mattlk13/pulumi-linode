// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.linode.inputs.GetUserDomainGrantArgs;
import com.pulumi.linode.inputs.GetUserFirewallGrantArgs;
import com.pulumi.linode.inputs.GetUserImageGrantArgs;
import com.pulumi.linode.inputs.GetUserLinodeGrantArgs;
import com.pulumi.linode.inputs.GetUserLongviewGrantArgs;
import com.pulumi.linode.inputs.GetUserNodebalancerGrantArgs;
import com.pulumi.linode.inputs.GetUserStackscriptGrantArgs;
import com.pulumi.linode.inputs.GetUserVolumeGrantArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUserArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserArgs Empty = new GetUserArgs();

    /**
     * The grants this User has pertaining to Domains on this Account.
     * 
     */
    @Import(name="domainGrants")
    private @Nullable Output<List<GetUserDomainGrantArgs>> domainGrants;

    /**
     * @return The grants this User has pertaining to Domains on this Account.
     * 
     */
    public Optional<Output<List<GetUserDomainGrantArgs>>> domainGrants() {
        return Optional.ofNullable(this.domainGrants);
    }

    /**
     * The grants this User has pertaining to Firewalls on this Account.
     * 
     */
    @Import(name="firewallGrants")
    private @Nullable Output<List<GetUserFirewallGrantArgs>> firewallGrants;

    /**
     * @return The grants this User has pertaining to Firewalls on this Account.
     * 
     */
    public Optional<Output<List<GetUserFirewallGrantArgs>>> firewallGrants() {
        return Optional.ofNullable(this.firewallGrants);
    }

    /**
     * The grants this User has pertaining to Images on this Account.
     * 
     */
    @Import(name="imageGrants")
    private @Nullable Output<List<GetUserImageGrantArgs>> imageGrants;

    /**
     * @return The grants this User has pertaining to Images on this Account.
     * 
     */
    public Optional<Output<List<GetUserImageGrantArgs>>> imageGrants() {
        return Optional.ofNullable(this.imageGrants);
    }

    /**
     * The grants this User has pertaining to Linodes on this Account.
     * 
     */
    @Import(name="linodeGrants")
    private @Nullable Output<List<GetUserLinodeGrantArgs>> linodeGrants;

    /**
     * @return The grants this User has pertaining to Linodes on this Account.
     * 
     */
    public Optional<Output<List<GetUserLinodeGrantArgs>>> linodeGrants() {
        return Optional.ofNullable(this.linodeGrants);
    }

    /**
     * The grants this User has pertaining to Longview Clients on this Account.
     * 
     */
    @Import(name="longviewGrants")
    private @Nullable Output<List<GetUserLongviewGrantArgs>> longviewGrants;

    /**
     * @return The grants this User has pertaining to Longview Clients on this Account.
     * 
     */
    public Optional<Output<List<GetUserLongviewGrantArgs>>> longviewGrants() {
        return Optional.ofNullable(this.longviewGrants);
    }

    /**
     * The grants this User has pertaining to NodeBalancers on this Account.
     * 
     */
    @Import(name="nodebalancerGrants")
    private @Nullable Output<List<GetUserNodebalancerGrantArgs>> nodebalancerGrants;

    /**
     * @return The grants this User has pertaining to NodeBalancers on this Account.
     * 
     */
    public Optional<Output<List<GetUserNodebalancerGrantArgs>>> nodebalancerGrants() {
        return Optional.ofNullable(this.nodebalancerGrants);
    }

    /**
     * The grants this User has pertaining to StackScripts on this Account.
     * 
     */
    @Import(name="stackscriptGrants")
    private @Nullable Output<List<GetUserStackscriptGrantArgs>> stackscriptGrants;

    /**
     * @return The grants this User has pertaining to StackScripts on this Account.
     * 
     */
    public Optional<Output<List<GetUserStackscriptGrantArgs>>> stackscriptGrants() {
        return Optional.ofNullable(this.stackscriptGrants);
    }

    /**
     * The unique username of this User.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return The unique username of this User.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    /**
     * The grants this User has pertaining to Volumes on this Account.
     * 
     */
    @Import(name="volumeGrants")
    private @Nullable Output<List<GetUserVolumeGrantArgs>> volumeGrants;

    /**
     * @return The grants this User has pertaining to Volumes on this Account.
     * 
     */
    public Optional<Output<List<GetUserVolumeGrantArgs>>> volumeGrants() {
        return Optional.ofNullable(this.volumeGrants);
    }

    private GetUserArgs() {}

    private GetUserArgs(GetUserArgs $) {
        this.domainGrants = $.domainGrants;
        this.firewallGrants = $.firewallGrants;
        this.imageGrants = $.imageGrants;
        this.linodeGrants = $.linodeGrants;
        this.longviewGrants = $.longviewGrants;
        this.nodebalancerGrants = $.nodebalancerGrants;
        this.stackscriptGrants = $.stackscriptGrants;
        this.username = $.username;
        this.volumeGrants = $.volumeGrants;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserArgs $;

        public Builder() {
            $ = new GetUserArgs();
        }

        public Builder(GetUserArgs defaults) {
            $ = new GetUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainGrants The grants this User has pertaining to Domains on this Account.
         * 
         * @return builder
         * 
         */
        public Builder domainGrants(@Nullable Output<List<GetUserDomainGrantArgs>> domainGrants) {
            $.domainGrants = domainGrants;
            return this;
        }

        /**
         * @param domainGrants The grants this User has pertaining to Domains on this Account.
         * 
         * @return builder
         * 
         */
        public Builder domainGrants(List<GetUserDomainGrantArgs> domainGrants) {
            return domainGrants(Output.of(domainGrants));
        }

        /**
         * @param domainGrants The grants this User has pertaining to Domains on this Account.
         * 
         * @return builder
         * 
         */
        public Builder domainGrants(GetUserDomainGrantArgs... domainGrants) {
            return domainGrants(List.of(domainGrants));
        }

        /**
         * @param firewallGrants The grants this User has pertaining to Firewalls on this Account.
         * 
         * @return builder
         * 
         */
        public Builder firewallGrants(@Nullable Output<List<GetUserFirewallGrantArgs>> firewallGrants) {
            $.firewallGrants = firewallGrants;
            return this;
        }

        /**
         * @param firewallGrants The grants this User has pertaining to Firewalls on this Account.
         * 
         * @return builder
         * 
         */
        public Builder firewallGrants(List<GetUserFirewallGrantArgs> firewallGrants) {
            return firewallGrants(Output.of(firewallGrants));
        }

        /**
         * @param firewallGrants The grants this User has pertaining to Firewalls on this Account.
         * 
         * @return builder
         * 
         */
        public Builder firewallGrants(GetUserFirewallGrantArgs... firewallGrants) {
            return firewallGrants(List.of(firewallGrants));
        }

        /**
         * @param imageGrants The grants this User has pertaining to Images on this Account.
         * 
         * @return builder
         * 
         */
        public Builder imageGrants(@Nullable Output<List<GetUserImageGrantArgs>> imageGrants) {
            $.imageGrants = imageGrants;
            return this;
        }

        /**
         * @param imageGrants The grants this User has pertaining to Images on this Account.
         * 
         * @return builder
         * 
         */
        public Builder imageGrants(List<GetUserImageGrantArgs> imageGrants) {
            return imageGrants(Output.of(imageGrants));
        }

        /**
         * @param imageGrants The grants this User has pertaining to Images on this Account.
         * 
         * @return builder
         * 
         */
        public Builder imageGrants(GetUserImageGrantArgs... imageGrants) {
            return imageGrants(List.of(imageGrants));
        }

        /**
         * @param linodeGrants The grants this User has pertaining to Linodes on this Account.
         * 
         * @return builder
         * 
         */
        public Builder linodeGrants(@Nullable Output<List<GetUserLinodeGrantArgs>> linodeGrants) {
            $.linodeGrants = linodeGrants;
            return this;
        }

        /**
         * @param linodeGrants The grants this User has pertaining to Linodes on this Account.
         * 
         * @return builder
         * 
         */
        public Builder linodeGrants(List<GetUserLinodeGrantArgs> linodeGrants) {
            return linodeGrants(Output.of(linodeGrants));
        }

        /**
         * @param linodeGrants The grants this User has pertaining to Linodes on this Account.
         * 
         * @return builder
         * 
         */
        public Builder linodeGrants(GetUserLinodeGrantArgs... linodeGrants) {
            return linodeGrants(List.of(linodeGrants));
        }

        /**
         * @param longviewGrants The grants this User has pertaining to Longview Clients on this Account.
         * 
         * @return builder
         * 
         */
        public Builder longviewGrants(@Nullable Output<List<GetUserLongviewGrantArgs>> longviewGrants) {
            $.longviewGrants = longviewGrants;
            return this;
        }

        /**
         * @param longviewGrants The grants this User has pertaining to Longview Clients on this Account.
         * 
         * @return builder
         * 
         */
        public Builder longviewGrants(List<GetUserLongviewGrantArgs> longviewGrants) {
            return longviewGrants(Output.of(longviewGrants));
        }

        /**
         * @param longviewGrants The grants this User has pertaining to Longview Clients on this Account.
         * 
         * @return builder
         * 
         */
        public Builder longviewGrants(GetUserLongviewGrantArgs... longviewGrants) {
            return longviewGrants(List.of(longviewGrants));
        }

        /**
         * @param nodebalancerGrants The grants this User has pertaining to NodeBalancers on this Account.
         * 
         * @return builder
         * 
         */
        public Builder nodebalancerGrants(@Nullable Output<List<GetUserNodebalancerGrantArgs>> nodebalancerGrants) {
            $.nodebalancerGrants = nodebalancerGrants;
            return this;
        }

        /**
         * @param nodebalancerGrants The grants this User has pertaining to NodeBalancers on this Account.
         * 
         * @return builder
         * 
         */
        public Builder nodebalancerGrants(List<GetUserNodebalancerGrantArgs> nodebalancerGrants) {
            return nodebalancerGrants(Output.of(nodebalancerGrants));
        }

        /**
         * @param nodebalancerGrants The grants this User has pertaining to NodeBalancers on this Account.
         * 
         * @return builder
         * 
         */
        public Builder nodebalancerGrants(GetUserNodebalancerGrantArgs... nodebalancerGrants) {
            return nodebalancerGrants(List.of(nodebalancerGrants));
        }

        /**
         * @param stackscriptGrants The grants this User has pertaining to StackScripts on this Account.
         * 
         * @return builder
         * 
         */
        public Builder stackscriptGrants(@Nullable Output<List<GetUserStackscriptGrantArgs>> stackscriptGrants) {
            $.stackscriptGrants = stackscriptGrants;
            return this;
        }

        /**
         * @param stackscriptGrants The grants this User has pertaining to StackScripts on this Account.
         * 
         * @return builder
         * 
         */
        public Builder stackscriptGrants(List<GetUserStackscriptGrantArgs> stackscriptGrants) {
            return stackscriptGrants(Output.of(stackscriptGrants));
        }

        /**
         * @param stackscriptGrants The grants this User has pertaining to StackScripts on this Account.
         * 
         * @return builder
         * 
         */
        public Builder stackscriptGrants(GetUserStackscriptGrantArgs... stackscriptGrants) {
            return stackscriptGrants(List.of(stackscriptGrants));
        }

        /**
         * @param username The unique username of this User.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The unique username of this User.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        /**
         * @param volumeGrants The grants this User has pertaining to Volumes on this Account.
         * 
         * @return builder
         * 
         */
        public Builder volumeGrants(@Nullable Output<List<GetUserVolumeGrantArgs>> volumeGrants) {
            $.volumeGrants = volumeGrants;
            return this;
        }

        /**
         * @param volumeGrants The grants this User has pertaining to Volumes on this Account.
         * 
         * @return builder
         * 
         */
        public Builder volumeGrants(List<GetUserVolumeGrantArgs> volumeGrants) {
            return volumeGrants(Output.of(volumeGrants));
        }

        /**
         * @param volumeGrants The grants this User has pertaining to Volumes on this Account.
         * 
         * @return builder
         * 
         */
        public Builder volumeGrants(GetUserVolumeGrantArgs... volumeGrants) {
            return volumeGrants(List.of(volumeGrants));
        }

        public GetUserArgs build() {
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
