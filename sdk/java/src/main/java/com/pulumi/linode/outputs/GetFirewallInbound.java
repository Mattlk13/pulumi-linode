// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFirewallInbound {
    /**
     * @return Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inbound_policy if this is an inbound rule, or the outbound_policy if this is an outbound rule.
     * 
     */
    private final String action;
    /**
     * @return A list of IPv4 addresses or networks. Must be in IP/mask format.
     * 
     */
    private final List<String> ipv4s;
    /**
     * @return A list of IPv6 addresses or networks. Must be in IP/mask format.
     * 
     */
    private final List<String> ipv6s;
    /**
     * @return The label of the underlying entity this device references.
     * 
     */
    private final String label;
    /**
     * @return A string representation of ports and/or port ranges (i.e. &#34;443&#34; or &#34;80-90, 91&#34;).
     * 
     */
    private final String ports;
    /**
     * @return The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
     * 
     */
    private final String protocol;

    @CustomType.Constructor
    private GetFirewallInbound(
        @CustomType.Parameter("action") String action,
        @CustomType.Parameter("ipv4s") List<String> ipv4s,
        @CustomType.Parameter("ipv6s") List<String> ipv6s,
        @CustomType.Parameter("label") String label,
        @CustomType.Parameter("ports") String ports,
        @CustomType.Parameter("protocol") String protocol) {
        this.action = action;
        this.ipv4s = ipv4s;
        this.ipv6s = ipv6s;
        this.label = label;
        this.ports = ports;
        this.protocol = protocol;
    }

    /**
     * @return Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall’s inbound_policy if this is an inbound rule, or the outbound_policy if this is an outbound rule.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return A list of IPv4 addresses or networks. Must be in IP/mask format.
     * 
     */
    public List<String> ipv4s() {
        return this.ipv4s;
    }
    /**
     * @return A list of IPv6 addresses or networks. Must be in IP/mask format.
     * 
     */
    public List<String> ipv6s() {
        return this.ipv6s;
    }
    /**
     * @return The label of the underlying entity this device references.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return A string representation of ports and/or port ranges (i.e. &#34;443&#34; or &#34;80-90, 91&#34;).
     * 
     */
    public String ports() {
        return this.ports;
    }
    /**
     * @return The network protocol this rule controls. (`TCP`, `UDP`, `ICMP`)
     * 
     */
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallInbound defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String action;
        private List<String> ipv4s;
        private List<String> ipv6s;
        private String label;
        private String ports;
        private String protocol;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFirewallInbound defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.ipv4s = defaults.ipv4s;
    	      this.ipv6s = defaults.ipv6s;
    	      this.label = defaults.label;
    	      this.ports = defaults.ports;
    	      this.protocol = defaults.protocol;
        }

        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder ipv4s(List<String> ipv4s) {
            this.ipv4s = Objects.requireNonNull(ipv4s);
            return this;
        }
        public Builder ipv4s(String... ipv4s) {
            return ipv4s(List.of(ipv4s));
        }
        public Builder ipv6s(List<String> ipv6s) {
            this.ipv6s = Objects.requireNonNull(ipv6s);
            return this;
        }
        public Builder ipv6s(String... ipv6s) {
            return ipv6s(List.of(ipv6s));
        }
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        public Builder ports(String ports) {
            this.ports = Objects.requireNonNull(ports);
            return this;
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }        public GetFirewallInbound build() {
            return new GetFirewallInbound(action, ipv4s, ipv6s, label, ports, protocol);
        }
    }
}
