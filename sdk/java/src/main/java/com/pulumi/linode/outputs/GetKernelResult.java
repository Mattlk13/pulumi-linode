// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKernelResult {
    private final String architecture;
    private final Boolean deprecated;
    private final String id;
    private final Boolean kvm;
    private final String label;
    private final Boolean pvops;
    private final String version;
    private final Boolean xen;

    @CustomType.Constructor
    private GetKernelResult(
        @CustomType.Parameter("architecture") String architecture,
        @CustomType.Parameter("deprecated") Boolean deprecated,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("kvm") Boolean kvm,
        @CustomType.Parameter("label") String label,
        @CustomType.Parameter("pvops") Boolean pvops,
        @CustomType.Parameter("version") String version,
        @CustomType.Parameter("xen") Boolean xen) {
        this.architecture = architecture;
        this.deprecated = deprecated;
        this.id = id;
        this.kvm = kvm;
        this.label = label;
        this.pvops = pvops;
        this.version = version;
        this.xen = xen;
    }

    public String architecture() {
        return this.architecture;
    }
    public Boolean deprecated() {
        return this.deprecated;
    }
    public String id() {
        return this.id;
    }
    public Boolean kvm() {
        return this.kvm;
    }
    public String label() {
        return this.label;
    }
    public Boolean pvops() {
        return this.pvops;
    }
    public String version() {
        return this.version;
    }
    public Boolean xen() {
        return this.xen;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKernelResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String architecture;
        private Boolean deprecated;
        private String id;
        private Boolean kvm;
        private String label;
        private Boolean pvops;
        private String version;
        private Boolean xen;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKernelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.deprecated = defaults.deprecated;
    	      this.id = defaults.id;
    	      this.kvm = defaults.kvm;
    	      this.label = defaults.label;
    	      this.pvops = defaults.pvops;
    	      this.version = defaults.version;
    	      this.xen = defaults.xen;
        }

        public Builder architecture(String architecture) {
            this.architecture = Objects.requireNonNull(architecture);
            return this;
        }
        public Builder deprecated(Boolean deprecated) {
            this.deprecated = Objects.requireNonNull(deprecated);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder kvm(Boolean kvm) {
            this.kvm = Objects.requireNonNull(kvm);
            return this;
        }
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        public Builder pvops(Boolean pvops) {
            this.pvops = Objects.requireNonNull(pvops);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public Builder xen(Boolean xen) {
            this.xen = Objects.requireNonNull(xen);
            return this;
        }        public GetKernelResult build() {
            return new GetKernelResult(architecture, deprecated, id, kvm, label, pvops, version, xen);
        }
    }
}
