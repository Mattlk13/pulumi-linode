// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.linode.outputs.GetProfileReferrals;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProfileResult {
    private final List<String> authorizedKeys;
    private final String email;
    private final Boolean emailNotifications;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final Boolean ipWhitelistEnabled;
    private final String lishAuthMethod;
    private final GetProfileReferrals referrals;
    private final Boolean restricted;
    private final String timezone;
    private final Boolean twoFactorAuth;
    private final String username;

    @CustomType.Constructor
    private GetProfileResult(
        @CustomType.Parameter("authorizedKeys") List<String> authorizedKeys,
        @CustomType.Parameter("email") String email,
        @CustomType.Parameter("emailNotifications") Boolean emailNotifications,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ipWhitelistEnabled") Boolean ipWhitelistEnabled,
        @CustomType.Parameter("lishAuthMethod") String lishAuthMethod,
        @CustomType.Parameter("referrals") GetProfileReferrals referrals,
        @CustomType.Parameter("restricted") Boolean restricted,
        @CustomType.Parameter("timezone") String timezone,
        @CustomType.Parameter("twoFactorAuth") Boolean twoFactorAuth,
        @CustomType.Parameter("username") String username) {
        this.authorizedKeys = authorizedKeys;
        this.email = email;
        this.emailNotifications = emailNotifications;
        this.id = id;
        this.ipWhitelistEnabled = ipWhitelistEnabled;
        this.lishAuthMethod = lishAuthMethod;
        this.referrals = referrals;
        this.restricted = restricted;
        this.timezone = timezone;
        this.twoFactorAuth = twoFactorAuth;
        this.username = username;
    }

    public List<String> authorizedKeys() {
        return this.authorizedKeys;
    }
    public String email() {
        return this.email;
    }
    public Boolean emailNotifications() {
        return this.emailNotifications;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean ipWhitelistEnabled() {
        return this.ipWhitelistEnabled;
    }
    public String lishAuthMethod() {
        return this.lishAuthMethod;
    }
    public GetProfileReferrals referrals() {
        return this.referrals;
    }
    public Boolean restricted() {
        return this.restricted;
    }
    public String timezone() {
        return this.timezone;
    }
    public Boolean twoFactorAuth() {
        return this.twoFactorAuth;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfileResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> authorizedKeys;
        private String email;
        private Boolean emailNotifications;
        private String id;
        private Boolean ipWhitelistEnabled;
        private String lishAuthMethod;
        private GetProfileReferrals referrals;
        private Boolean restricted;
        private String timezone;
        private Boolean twoFactorAuth;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizedKeys = defaults.authorizedKeys;
    	      this.email = defaults.email;
    	      this.emailNotifications = defaults.emailNotifications;
    	      this.id = defaults.id;
    	      this.ipWhitelistEnabled = defaults.ipWhitelistEnabled;
    	      this.lishAuthMethod = defaults.lishAuthMethod;
    	      this.referrals = defaults.referrals;
    	      this.restricted = defaults.restricted;
    	      this.timezone = defaults.timezone;
    	      this.twoFactorAuth = defaults.twoFactorAuth;
    	      this.username = defaults.username;
        }

        public Builder authorizedKeys(List<String> authorizedKeys) {
            this.authorizedKeys = Objects.requireNonNull(authorizedKeys);
            return this;
        }
        public Builder authorizedKeys(String... authorizedKeys) {
            return authorizedKeys(List.of(authorizedKeys));
        }
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        public Builder emailNotifications(Boolean emailNotifications) {
            this.emailNotifications = Objects.requireNonNull(emailNotifications);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ipWhitelistEnabled(Boolean ipWhitelistEnabled) {
            this.ipWhitelistEnabled = Objects.requireNonNull(ipWhitelistEnabled);
            return this;
        }
        public Builder lishAuthMethod(String lishAuthMethod) {
            this.lishAuthMethod = Objects.requireNonNull(lishAuthMethod);
            return this;
        }
        public Builder referrals(GetProfileReferrals referrals) {
            this.referrals = Objects.requireNonNull(referrals);
            return this;
        }
        public Builder restricted(Boolean restricted) {
            this.restricted = Objects.requireNonNull(restricted);
            return this;
        }
        public Builder timezone(String timezone) {
            this.timezone = Objects.requireNonNull(timezone);
            return this;
        }
        public Builder twoFactorAuth(Boolean twoFactorAuth) {
            this.twoFactorAuth = Objects.requireNonNull(twoFactorAuth);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public GetProfileResult build() {
            return new GetProfileResult(authorizedKeys, email, emailNotifications, id, ipWhitelistEnabled, lishAuthMethod, referrals, restricted, timezone, twoFactorAuth, username);
        }
    }
}
