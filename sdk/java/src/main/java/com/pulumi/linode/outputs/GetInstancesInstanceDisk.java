// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstanceDisk {
    private final String filesystem;
    private final Integer id;
    private final String label;
    private final Integer size;

    @CustomType.Constructor
    private GetInstancesInstanceDisk(
        @CustomType.Parameter("filesystem") String filesystem,
        @CustomType.Parameter("id") Integer id,
        @CustomType.Parameter("label") String label,
        @CustomType.Parameter("size") Integer size) {
        this.filesystem = filesystem;
        this.id = id;
        this.label = label;
        this.size = size;
    }

    public String filesystem() {
        return this.filesystem;
    }
    public Integer id() {
        return this.id;
    }
    public String label() {
        return this.label;
    }
    public Integer size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstanceDisk defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String filesystem;
        private Integer id;
        private String label;
        private Integer size;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstanceDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filesystem = defaults.filesystem;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.size = defaults.size;
        }

        public Builder filesystem(String filesystem) {
            this.filesystem = Objects.requireNonNull(filesystem);
            return this;
        }
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        public Builder size(Integer size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }        public GetInstancesInstanceDisk build() {
            return new GetInstancesInstanceDisk(filesystem, id, label, size);
        }
    }
}
