// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodeBalancerTransfer {
    /**
     * @return The total transfer, in MB, used by this NodeBalancer for the current month
     * 
     */
    private @Nullable Double in;
    /**
     * @return The total inbound transfer, in MB, used for this NodeBalancer for the current month
     * 
     */
    private @Nullable Double out;
    /**
     * @return The total outbound transfer, in MB, used for this NodeBalancer for the current month
     * 
     */
    private @Nullable Double total;

    private NodeBalancerTransfer() {}
    /**
     * @return The total transfer, in MB, used by this NodeBalancer for the current month
     * 
     */
    public Optional<Double> in() {
        return Optional.ofNullable(this.in);
    }
    /**
     * @return The total inbound transfer, in MB, used for this NodeBalancer for the current month
     * 
     */
    public Optional<Double> out() {
        return Optional.ofNullable(this.out);
    }
    /**
     * @return The total outbound transfer, in MB, used for this NodeBalancer for the current month
     * 
     */
    public Optional<Double> total() {
        return Optional.ofNullable(this.total);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeBalancerTransfer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double in;
        private @Nullable Double out;
        private @Nullable Double total;
        public Builder() {}
        public Builder(NodeBalancerTransfer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.in = defaults.in;
    	      this.out = defaults.out;
    	      this.total = defaults.total;
        }

        @CustomType.Setter
        public Builder in(@Nullable Double in) {
            this.in = in;
            return this;
        }
        @CustomType.Setter
        public Builder out(@Nullable Double out) {
            this.out = out;
            return this;
        }
        @CustomType.Setter
        public Builder total(@Nullable Double total) {
            this.total = total;
            return this;
        }
        public NodeBalancerTransfer build() {
            final var o = new NodeBalancerTransfer();
            o.in = in;
            o.out = out;
            o.total = total;
            return o;
        }
    }
}
