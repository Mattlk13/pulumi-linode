// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVolumeResult {
    private final String created;
    private final String filesystemPath;
    private final Integer id;
    private final String label;
    private final Integer linodeId;
    private final String region;
    private final Integer size;
    private final String status;
    private final List<String> tags;
    private final String updated;

    @CustomType.Constructor
    private GetVolumeResult(
        @CustomType.Parameter("created") String created,
        @CustomType.Parameter("filesystemPath") String filesystemPath,
        @CustomType.Parameter("id") Integer id,
        @CustomType.Parameter("label") String label,
        @CustomType.Parameter("linodeId") Integer linodeId,
        @CustomType.Parameter("region") String region,
        @CustomType.Parameter("size") Integer size,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") List<String> tags,
        @CustomType.Parameter("updated") String updated) {
        this.created = created;
        this.filesystemPath = filesystemPath;
        this.id = id;
        this.label = label;
        this.linodeId = linodeId;
        this.region = region;
        this.size = size;
        this.status = status;
        this.tags = tags;
        this.updated = updated;
    }

    public String created() {
        return this.created;
    }
    public String filesystemPath() {
        return this.filesystemPath;
    }
    public Integer id() {
        return this.id;
    }
    public String label() {
        return this.label;
    }
    public Integer linodeId() {
        return this.linodeId;
    }
    public String region() {
        return this.region;
    }
    public Integer size() {
        return this.size;
    }
    public String status() {
        return this.status;
    }
    public List<String> tags() {
        return this.tags;
    }
    public String updated() {
        return this.updated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String created;
        private String filesystemPath;
        private Integer id;
        private String label;
        private Integer linodeId;
        private String region;
        private Integer size;
        private String status;
        private List<String> tags;
        private String updated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVolumeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.filesystemPath = defaults.filesystemPath;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.linodeId = defaults.linodeId;
    	      this.region = defaults.region;
    	      this.size = defaults.size;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.updated = defaults.updated;
        }

        public Builder created(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }
        public Builder filesystemPath(String filesystemPath) {
            this.filesystemPath = Objects.requireNonNull(filesystemPath);
            return this;
        }
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        public Builder linodeId(Integer linodeId) {
            this.linodeId = Objects.requireNonNull(linodeId);
            return this;
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder size(Integer size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder updated(String updated) {
            this.updated = Objects.requireNonNull(updated);
            return this;
        }        public GetVolumeResult build() {
            return new GetVolumeResult(created, filesystemPath, id, label, linodeId, region, size, status, tags, updated);
        }
    }
}
