// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.linode.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NodeBalancerTransferArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeBalancerTransferArgs Empty = new NodeBalancerTransferArgs();

    @Import(name="in")
    private @Nullable Output<Double> in;

    public Optional<Output<Double>> in() {
        return Optional.ofNullable(this.in);
    }

    @Import(name="out")
    private @Nullable Output<Double> out;

    public Optional<Output<Double>> out() {
        return Optional.ofNullable(this.out);
    }

    @Import(name="total")
    private @Nullable Output<Double> total;

    public Optional<Output<Double>> total() {
        return Optional.ofNullable(this.total);
    }

    private NodeBalancerTransferArgs() {}

    private NodeBalancerTransferArgs(NodeBalancerTransferArgs $) {
        this.in = $.in;
        this.out = $.out;
        this.total = $.total;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeBalancerTransferArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeBalancerTransferArgs $;

        public Builder() {
            $ = new NodeBalancerTransferArgs();
        }

        public Builder(NodeBalancerTransferArgs defaults) {
            $ = new NodeBalancerTransferArgs(Objects.requireNonNull(defaults));
        }

        public Builder in(@Nullable Output<Double> in) {
            $.in = in;
            return this;
        }

        public Builder in(Double in) {
            return in(Output.of(in));
        }

        public Builder out(@Nullable Output<Double> out) {
            $.out = out;
            return this;
        }

        public Builder out(Double out) {
            return out(Output.of(out));
        }

        public Builder total(@Nullable Output<Double> total) {
            $.total = total;
            return this;
        }

        public Builder total(Double total) {
            return total(Output.of(total));
        }

        public NodeBalancerTransferArgs build() {
            return $;
        }
    }

}
